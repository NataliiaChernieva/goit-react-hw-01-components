{"version":3,"sources":["components/Transactions/transaction.module.css","components/Friends/FriendList.module.css","components/Profile/Profile.js","components/Statistics/Statistic.js","components/Statistics/StatisticList.js","components/Friends/FriendListItem.js","components/Friends/FriendList.js","components/Transactions/TransactionTableHead.js","components/Transactions/TransactionTableRow.js","components/Transactions/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","props","avatar","name","tag","location","stats","className","src","alt","followers","views","likes","Statistic","label","percentage","StatisticList","title","map","stat","id","FriendListItem","isOnline","css","status","width","FriendList","friends","friend_list","friend","friend_list_item","TransactionTableHead","thead_row","thead_row_title","TransactionTableRow","type","amount","currency","trow","trow_data","TransactionHistory","items","transaction_history","item","App","user","statisticalData","transactions","reactDom","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.6ca2f6db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"transaction_transaction_history__2677o\",\"thead_row\":\"transaction_thead_row__3aDeX\",\"thead_row_title\":\"transaction_thead_row_title__1HtYm\",\"trow\":\"transaction_trow__3PBH3\",\"trow_data\":\"transaction_trow_data__3Dyju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__2hhy1\",\"friend_list_item\":\"FriendList_friend_list_item__2jiok\",\"status\":\"FriendList_status__3HWOF\",\"avatar\":\"FriendList_avatar__2owoM\"};","import PropTypes from 'prop-types';\r\n\r\nexport default function Profile(props) {\r\n  const {avatar,name,tag,location,stats} = props;\r\n  return (<div className=\"profile\">\r\n    <div className=\"description\">\r\n      <img src={avatar} alt={name} className=\"avatar\" />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">@{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul className=\"stats\">\r\n      <li>\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>);\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag:PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes:PropTypes.number.isRequired,\r\n  }),\r\n}","//mport PropTypes from 'prop-types';\r\n\r\nexport default function Statistic(props) {\r\n    return (<>\r\n        <span className=\"label\">{props.label}</span>\r\n        <span className=\"percentage\">{props.percentage}</span>\r\n    </>);\r\n}","import PropTypes from 'prop-types';\r\nimport Statistic from './Statistic';\r\n\r\nconst defaultTitle = 'Upload stats';\r\n\r\nexport default function StatisticList({ title=defaultTitle, stats }) {\r\n  return (<section className=\"statistics\">\r\n      {/* {title && <h2 className=\"title\">{title}</h2>} */}\r\n    <h2 className=\"title\">{title}</h2>\r\n    \r\n     <ul className=\"stat-list\">\r\n       {stats.map(stat =>\r\n         <li key={stat.id}><Statistic\r\n           label={stat.label}\r\n           percentage={stat.percentage}/></li>)}\r\n    \r\n  </ul>\r\n</section>);\r\n};\r\n\r\nStatisticList.propTypes = {\r\n  stats:PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  }),),\r\n  title: PropTypes.string,\r\n  //key: PropTypes.string.isRequired,\r\n   \r\n} ","import css from './FriendList.module.css';\r\n\r\nexport default function FriendListItem({ avatar, name, isOnline }) {\r\n  return (<>\r\n    <span className={css.status}>{isOnline}</span>\r\n    <img className={css.avatar} src={avatar} alt={name} width=\"48\" />\r\n    <p className=\"name\">{name}</p>\r\n  </>);\r\n}","import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport css from './FriendList.module.css';\r\n\r\nexport default function FriendList({ friends }){\r\n    return (\r\n        <ul className={css.friend_list}>\r\n            {friends.map(friend => (\r\n                <li key={friend.id} className={css.friend_list_item}>\r\n                    <FriendListItem\r\n                        avatar={friend.avatar}\r\n                        name={friend.name}\r\n                        isOnline={friend.isOnline} />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(PropTypes.shape({\r\n        avatar: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        isOnline: PropTypes.bool.isRequired,\r\n        id: PropTypes.number.isRequired,\r\n    }),),\r\n}","import css from './transaction.module.css';\r\n\r\nexport default function TransactionTableHead() {\r\n    return (\r\n        <tr className={css.thead_row}>\r\n            <th className={css.thead_row_title}>Type</th>\r\n            <th className={css.thead_row_title}>Amount</th>\r\n            <th className={css.thead_row_title}>Currency</th>\r\n        </tr>);\r\n}","import css from './transaction.module.css';\r\n\r\nexport default function TransactionTableRow({ id, type, amount, currency }) {\r\n    return (<tr key ={id} className={css.trow}>\r\n        <td className={css.trow_data}>{type}</td>\r\n        <td>{amount}</td>\r\n        <td>{currency}</td>\r\n    </tr>);\r\n}","import PropTypes from 'prop-types';\r\n//import { FaBeer } from 'react-icons/fa';\r\nimport TransactionTableHead from './TransactionTableHead';\r\nimport TransactionTableRow from './TransactionTableRow';\r\nimport css from './transaction.module.css';\r\n\r\nexport default function TransactionHistory({ items }) {\r\n    return (\r\n        <table className={css.transaction_history}>\r\n            <thead> <TransactionTableHead/></thead> \r\n            <tbody>\r\n                {items.map(item =>\r\n                    <TransactionTableRow\r\n                        id={item.id}\r\n                        type={item.type}\r\n                        amount={item.amount}\r\n                        currency={item.currency}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    );\r\n    \r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.string.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n    }),),\r\n}","import Profile from './components/Profile/Profile';\r\nimport StatisticList from './components/Statistics/StatisticList';\r\nimport FriendList from './components/Friends/FriendList';\r\nimport TransactionHistory from './components/Transactions/TransactionHistory'\r\n\r\nimport user from './data/user.json';\r\nimport statisticalData from './data/statistical-data.json';\r\nimport friends from './data/friends.json';\r\nimport transactions from './data/transactions.json';\r\n\r\nexport default function App() {\r\n    return <div>\r\n        <Profile\r\n            avatar={user.avatar}\r\n            name={user.name}\r\n            tag={user.tag}\r\n            location={user.location}\r\n            stats={user.stats} />\r\n        \r\n        <StatisticList stats={statisticalData} />\r\n        <FriendList friends={friends} />\r\n        <TransactionHistory items={transactions} />;\r\n    </div>\r\n}","import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nreactDom.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n\r\n\r\n"],"sourceRoot":""}